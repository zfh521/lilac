<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snail.lilac.core.repository.i18n.I18nMessageMapper">
  <resultMap id="BaseResultMap" type="com.snail.lilac.core.repository.i18n.I18nMessage">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="ACTIVE_VERSION" jdbcType="DECIMAL" property="activeVersion" />
    <result column="ATTRIBUTE1" jdbcType="VARCHAR" property="attribute1" />
    <result column="ATTRIBUTE2" jdbcType="VARCHAR" property="attribute2" />
    <result column="ATTRIBUTE3" jdbcType="VARCHAR" property="attribute3" />
    <result column="ATTRIBUTE4" jdbcType="VARCHAR" property="attribute4" />
    <result column="ATTRIBUTE5" jdbcType="VARCHAR" property="attribute5" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="CURRENT_VERSION" jdbcType="DECIMAL" property="currentVersion" />
    <result column="ENTITY_STATUS" jdbcType="DECIMAL" property="entityStatus" />
    <result column="INSTANCE_ID" jdbcType="VARCHAR" property="instanceId" />
    <result column="LAST_UPDATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="CONTENT_TEXT" jdbcType="VARCHAR" property="contentText" />
    <result column="FULL_CONTENT" jdbcType="VARCHAR" property="fullContent" />
    <result column="FULL_LANGUAGE" jdbcType="VARCHAR" property="fullLanguage" />
    <result column="HELP_TEXT" jdbcType="VARCHAR" property="helpText" />
    <result column="LANGUAGE" jdbcType="VARCHAR" property="language" />
    <result column="CREATED_USER" jdbcType="VARCHAR" property="createdUser" />
    <result column="LAST_UPDATE_USER" jdbcType="VARCHAR" property="lastUpdateUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.snail.lilac.core.repository.i18n.I18nMessage">
    <result column="SPACE_DEFINITION" jdbcType="VARBINARY" property="spaceDefinition" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ACTIVE_VERSION, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5, CREATED_TIME, 
    CURRENT_VERSION, ENTITY_STATUS, INSTANCE_ID, LAST_UPDATE_TIME, VERSION, CODE, CONTENT_TEXT, 
    FULL_CONTENT, FULL_LANGUAGE, HELP_TEXT, LANGUAGE, CREATED_USER, LAST_UPDATE_USER
  </sql>
  <sql id="Blob_Column_List">
    SPACE_DEFINITION
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.snail.lilac.core.repository.i18n.I18nMessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from LILAC.I18N_MESSAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.snail.lilac.core.repository.i18n.I18nMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from LILAC.I18N_MESSAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from LILAC.I18N_MESSAGE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from LILAC.I18N_MESSAGE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.snail.lilac.core.repository.i18n.I18nMessageExample">
    delete from LILAC.I18N_MESSAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.snail.lilac.core.repository.i18n.I18nMessage">
    insert into LILAC.I18N_MESSAGE (ID, ACTIVE_VERSION, ATTRIBUTE1, 
      ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, 
      ATTRIBUTE5, CREATED_TIME, CURRENT_VERSION, 
      ENTITY_STATUS, INSTANCE_ID, LAST_UPDATE_TIME, 
      VERSION, CODE, CONTENT_TEXT, 
      FULL_CONTENT, FULL_LANGUAGE, HELP_TEXT, 
      LANGUAGE, CREATED_USER, LAST_UPDATE_USER, 
      SPACE_DEFINITION)
    values (#{id,jdbcType=VARCHAR}, #{activeVersion,jdbcType=DECIMAL}, #{attribute1,jdbcType=VARCHAR}, 
      #{attribute2,jdbcType=VARCHAR}, #{attribute3,jdbcType=VARCHAR}, #{attribute4,jdbcType=VARCHAR}, 
      #{attribute5,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{currentVersion,jdbcType=DECIMAL}, 
      #{entityStatus,jdbcType=DECIMAL}, #{instanceId,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=DECIMAL}, #{code,jdbcType=VARCHAR}, #{contentText,jdbcType=VARCHAR}, 
      #{fullContent,jdbcType=VARCHAR}, #{fullLanguage,jdbcType=VARCHAR}, #{helpText,jdbcType=VARCHAR}, 
      #{language,jdbcType=VARCHAR}, #{createdUser,jdbcType=VARCHAR}, #{lastUpdateUser,jdbcType=VARCHAR}, 
      #{spaceDefinition,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.snail.lilac.core.repository.i18n.I18nMessage">
    insert into LILAC.I18N_MESSAGE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="activeVersion != null">
        ACTIVE_VERSION,
      </if>
      <if test="attribute1 != null">
        ATTRIBUTE1,
      </if>
      <if test="attribute2 != null">
        ATTRIBUTE2,
      </if>
      <if test="attribute3 != null">
        ATTRIBUTE3,
      </if>
      <if test="attribute4 != null">
        ATTRIBUTE4,
      </if>
      <if test="attribute5 != null">
        ATTRIBUTE5,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="currentVersion != null">
        CURRENT_VERSION,
      </if>
      <if test="entityStatus != null">
        ENTITY_STATUS,
      </if>
      <if test="instanceId != null">
        INSTANCE_ID,
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="contentText != null">
        CONTENT_TEXT,
      </if>
      <if test="fullContent != null">
        FULL_CONTENT,
      </if>
      <if test="fullLanguage != null">
        FULL_LANGUAGE,
      </if>
      <if test="helpText != null">
        HELP_TEXT,
      </if>
      <if test="language != null">
        LANGUAGE,
      </if>
      <if test="createdUser != null">
        CREATED_USER,
      </if>
      <if test="lastUpdateUser != null">
        LAST_UPDATE_USER,
      </if>
      <if test="spaceDefinition != null">
        SPACE_DEFINITION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="activeVersion != null">
        #{activeVersion,jdbcType=DECIMAL},
      </if>
      <if test="attribute1 != null">
        #{attribute1,jdbcType=VARCHAR},
      </if>
      <if test="attribute2 != null">
        #{attribute2,jdbcType=VARCHAR},
      </if>
      <if test="attribute3 != null">
        #{attribute3,jdbcType=VARCHAR},
      </if>
      <if test="attribute4 != null">
        #{attribute4,jdbcType=VARCHAR},
      </if>
      <if test="attribute5 != null">
        #{attribute5,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentVersion != null">
        #{currentVersion,jdbcType=DECIMAL},
      </if>
      <if test="entityStatus != null">
        #{entityStatus,jdbcType=DECIMAL},
      </if>
      <if test="instanceId != null">
        #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="contentText != null">
        #{contentText,jdbcType=VARCHAR},
      </if>
      <if test="fullContent != null">
        #{fullContent,jdbcType=VARCHAR},
      </if>
      <if test="fullLanguage != null">
        #{fullLanguage,jdbcType=VARCHAR},
      </if>
      <if test="helpText != null">
        #{helpText,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null">
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="spaceDefinition != null">
        #{spaceDefinition,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.snail.lilac.core.repository.i18n.I18nMessageExample" resultType="java.lang.Integer">
    select count(*) from LILAC.I18N_MESSAGE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update LILAC.I18N_MESSAGE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.activeVersion != null">
        ACTIVE_VERSION = #{record.activeVersion,jdbcType=DECIMAL},
      </if>
      <if test="record.attribute1 != null">
        ATTRIBUTE1 = #{record.attribute1,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute2 != null">
        ATTRIBUTE2 = #{record.attribute2,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute3 != null">
        ATTRIBUTE3 = #{record.attribute3,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute4 != null">
        ATTRIBUTE4 = #{record.attribute4,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute5 != null">
        ATTRIBUTE5 = #{record.attribute5,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentVersion != null">
        CURRENT_VERSION = #{record.currentVersion,jdbcType=DECIMAL},
      </if>
      <if test="record.entityStatus != null">
        ENTITY_STATUS = #{record.entityStatus,jdbcType=DECIMAL},
      </if>
      <if test="record.instanceId != null">
        INSTANCE_ID = #{record.instanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateTime != null">
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=DECIMAL},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.contentText != null">
        CONTENT_TEXT = #{record.contentText,jdbcType=VARCHAR},
      </if>
      <if test="record.fullContent != null">
        FULL_CONTENT = #{record.fullContent,jdbcType=VARCHAR},
      </if>
      <if test="record.fullLanguage != null">
        FULL_LANGUAGE = #{record.fullLanguage,jdbcType=VARCHAR},
      </if>
      <if test="record.helpText != null">
        HELP_TEXT = #{record.helpText,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        LANGUAGE = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.createdUser != null">
        CREATED_USER = #{record.createdUser,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateUser != null">
        LAST_UPDATE_USER = #{record.lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.spaceDefinition != null">
        SPACE_DEFINITION = #{record.spaceDefinition,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update LILAC.I18N_MESSAGE
    set ID = #{record.id,jdbcType=VARCHAR},
      ACTIVE_VERSION = #{record.activeVersion,jdbcType=DECIMAL},
      ATTRIBUTE1 = #{record.attribute1,jdbcType=VARCHAR},
      ATTRIBUTE2 = #{record.attribute2,jdbcType=VARCHAR},
      ATTRIBUTE3 = #{record.attribute3,jdbcType=VARCHAR},
      ATTRIBUTE4 = #{record.attribute4,jdbcType=VARCHAR},
      ATTRIBUTE5 = #{record.attribute5,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      CURRENT_VERSION = #{record.currentVersion,jdbcType=DECIMAL},
      ENTITY_STATUS = #{record.entityStatus,jdbcType=DECIMAL},
      INSTANCE_ID = #{record.instanceId,jdbcType=VARCHAR},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      VERSION = #{record.version,jdbcType=DECIMAL},
      CODE = #{record.code,jdbcType=VARCHAR},
      CONTENT_TEXT = #{record.contentText,jdbcType=VARCHAR},
      FULL_CONTENT = #{record.fullContent,jdbcType=VARCHAR},
      FULL_LANGUAGE = #{record.fullLanguage,jdbcType=VARCHAR},
      HELP_TEXT = #{record.helpText,jdbcType=VARCHAR},
      LANGUAGE = #{record.language,jdbcType=VARCHAR},
      CREATED_USER = #{record.createdUser,jdbcType=VARCHAR},
      LAST_UPDATE_USER = #{record.lastUpdateUser,jdbcType=VARCHAR},
      SPACE_DEFINITION = #{record.spaceDefinition,jdbcType=VARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update LILAC.I18N_MESSAGE
    set ID = #{record.id,jdbcType=VARCHAR},
      ACTIVE_VERSION = #{record.activeVersion,jdbcType=DECIMAL},
      ATTRIBUTE1 = #{record.attribute1,jdbcType=VARCHAR},
      ATTRIBUTE2 = #{record.attribute2,jdbcType=VARCHAR},
      ATTRIBUTE3 = #{record.attribute3,jdbcType=VARCHAR},
      ATTRIBUTE4 = #{record.attribute4,jdbcType=VARCHAR},
      ATTRIBUTE5 = #{record.attribute5,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      CURRENT_VERSION = #{record.currentVersion,jdbcType=DECIMAL},
      ENTITY_STATUS = #{record.entityStatus,jdbcType=DECIMAL},
      INSTANCE_ID = #{record.instanceId,jdbcType=VARCHAR},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      VERSION = #{record.version,jdbcType=DECIMAL},
      CODE = #{record.code,jdbcType=VARCHAR},
      CONTENT_TEXT = #{record.contentText,jdbcType=VARCHAR},
      FULL_CONTENT = #{record.fullContent,jdbcType=VARCHAR},
      FULL_LANGUAGE = #{record.fullLanguage,jdbcType=VARCHAR},
      HELP_TEXT = #{record.helpText,jdbcType=VARCHAR},
      LANGUAGE = #{record.language,jdbcType=VARCHAR},
      CREATED_USER = #{record.createdUser,jdbcType=VARCHAR},
      LAST_UPDATE_USER = #{record.lastUpdateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.snail.lilac.core.repository.i18n.I18nMessage">
    update LILAC.I18N_MESSAGE
    <set>
      <if test="activeVersion != null">
        ACTIVE_VERSION = #{activeVersion,jdbcType=DECIMAL},
      </if>
      <if test="attribute1 != null">
        ATTRIBUTE1 = #{attribute1,jdbcType=VARCHAR},
      </if>
      <if test="attribute2 != null">
        ATTRIBUTE2 = #{attribute2,jdbcType=VARCHAR},
      </if>
      <if test="attribute3 != null">
        ATTRIBUTE3 = #{attribute3,jdbcType=VARCHAR},
      </if>
      <if test="attribute4 != null">
        ATTRIBUTE4 = #{attribute4,jdbcType=VARCHAR},
      </if>
      <if test="attribute5 != null">
        ATTRIBUTE5 = #{attribute5,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentVersion != null">
        CURRENT_VERSION = #{currentVersion,jdbcType=DECIMAL},
      </if>
      <if test="entityStatus != null">
        ENTITY_STATUS = #{entityStatus,jdbcType=DECIMAL},
      </if>
      <if test="instanceId != null">
        INSTANCE_ID = #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="contentText != null">
        CONTENT_TEXT = #{contentText,jdbcType=VARCHAR},
      </if>
      <if test="fullContent != null">
        FULL_CONTENT = #{fullContent,jdbcType=VARCHAR},
      </if>
      <if test="fullLanguage != null">
        FULL_LANGUAGE = #{fullLanguage,jdbcType=VARCHAR},
      </if>
      <if test="helpText != null">
        HELP_TEXT = #{helpText,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        LANGUAGE = #{language,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null">
        CREATED_USER = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null">
        LAST_UPDATE_USER = #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="spaceDefinition != null">
        SPACE_DEFINITION = #{spaceDefinition,jdbcType=VARBINARY},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.snail.lilac.core.repository.i18n.I18nMessage">
    update LILAC.I18N_MESSAGE
    set ACTIVE_VERSION = #{activeVersion,jdbcType=DECIMAL},
      ATTRIBUTE1 = #{attribute1,jdbcType=VARCHAR},
      ATTRIBUTE2 = #{attribute2,jdbcType=VARCHAR},
      ATTRIBUTE3 = #{attribute3,jdbcType=VARCHAR},
      ATTRIBUTE4 = #{attribute4,jdbcType=VARCHAR},
      ATTRIBUTE5 = #{attribute5,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      CURRENT_VERSION = #{currentVersion,jdbcType=DECIMAL},
      ENTITY_STATUS = #{entityStatus,jdbcType=DECIMAL},
      INSTANCE_ID = #{instanceId,jdbcType=VARCHAR},
      LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      VERSION = #{version,jdbcType=DECIMAL},
      CODE = #{code,jdbcType=VARCHAR},
      CONTENT_TEXT = #{contentText,jdbcType=VARCHAR},
      FULL_CONTENT = #{fullContent,jdbcType=VARCHAR},
      FULL_LANGUAGE = #{fullLanguage,jdbcType=VARCHAR},
      HELP_TEXT = #{helpText,jdbcType=VARCHAR},
      LANGUAGE = #{language,jdbcType=VARCHAR},
      CREATED_USER = #{createdUser,jdbcType=VARCHAR},
      LAST_UPDATE_USER = #{lastUpdateUser,jdbcType=VARCHAR},
      SPACE_DEFINITION = #{spaceDefinition,jdbcType=VARBINARY}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snail.lilac.core.repository.i18n.I18nMessage">
    update LILAC.I18N_MESSAGE
    set ACTIVE_VERSION = #{activeVersion,jdbcType=DECIMAL},
      ATTRIBUTE1 = #{attribute1,jdbcType=VARCHAR},
      ATTRIBUTE2 = #{attribute2,jdbcType=VARCHAR},
      ATTRIBUTE3 = #{attribute3,jdbcType=VARCHAR},
      ATTRIBUTE4 = #{attribute4,jdbcType=VARCHAR},
      ATTRIBUTE5 = #{attribute5,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      CURRENT_VERSION = #{currentVersion,jdbcType=DECIMAL},
      ENTITY_STATUS = #{entityStatus,jdbcType=DECIMAL},
      INSTANCE_ID = #{instanceId,jdbcType=VARCHAR},
      LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      VERSION = #{version,jdbcType=DECIMAL},
      CODE = #{code,jdbcType=VARCHAR},
      CONTENT_TEXT = #{contentText,jdbcType=VARCHAR},
      FULL_CONTENT = #{fullContent,jdbcType=VARCHAR},
      FULL_LANGUAGE = #{fullLanguage,jdbcType=VARCHAR},
      HELP_TEXT = #{helpText,jdbcType=VARCHAR},
      LANGUAGE = #{language,jdbcType=VARCHAR},
      CREATED_USER = #{createdUser,jdbcType=VARCHAR},
      LAST_UPDATE_USER = #{lastUpdateUser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>